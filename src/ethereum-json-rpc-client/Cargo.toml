[package]
name = "ethereum-json-rpc-client"

authors.workspace = true
homepage.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true

[features]
ic-canister-client = ["dep:ic-canister-client"]
pocket-ic-tests-client = [
  "ic-canister-client",
  "ic-canister-client/pocket-ic-client",
]
reqwest = ["dep:reqwest"]
http-outcall = ["dep:url"]
# Adds an API method `sanitize_http_response` to the canister and `HttpOutcallClient::new_sanitized` method to use it.
# We feature-gate it because it changes the API of the canister which is not always necessary.
sanitize-http-outcall = ["dep:ic-cdk"]

[dependencies]
alloy = { workspace = true }
candid = { workspace = true }
did = { workspace = true }
ic-canister-client = { workspace = true, optional = true }
ic-cdk = { workspace = true, optional = true }
ic-exports = { workspace = true }
itertools = { workspace = true }
log = { workspace = true }
reqwest = { workspace = true, optional = true, features = [
  "gzip",
  "json",
  "rustls-tls",
  "trust-dns",
] }
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
url = { workspace = true, optional = true }

[dev-dependencies]
alloy = { workspace = true, features = ["dyn-abi", "json-abi"] }
env_logger = { workspace = true }
rand = { workspace = true }
serial_test = { workspace = true }
tokio = { workspace = true }
